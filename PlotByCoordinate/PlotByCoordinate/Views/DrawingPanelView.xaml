<Window
    x:Class="PlotByCoordinate.View.DrawingPanelView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
    xmlns:viewModels="clr-namespace:PlotByCoordinate.ViewModels"
    x:Name="Win"
    Title="DrawingPanelView"
    Width="800"
    Height="600"
    BorderBrush="#3448a1"
    BorderThickness="2"
    DataContext="{Binding Path=Coordinate, Source={StaticResource Locator}}"
    Style="{DynamicResource WindowStyle}"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/Style.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding
            Key="B"
            Command="{Binding KeyDownCommand}"
            Modifiers="Ctrl" />
    </Window.InputBindings>
    <Grid ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Border
            Grid.Row="0"
            Grid.Column="0"
            Background="#3448a1"
            BorderThickness="0" />
        <Border
            Grid.Row="0"
            Grid.Column="1"
            Background="#3448a1"
            IsHitTestVisible="False"/>
        <Border
            Grid.Row="1"
            Grid.Column="0"
            Background="#000000"
            BorderBrush="#3448a1" />
        <Border
            Grid.Row="1"
            Grid.Column="1"
            Background="#f1f1f1"
            BorderBrush="#3448a1" />
        <StackPanel
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Width="20"
                Height="20"
                Margin="0,0,5,0"
                Command="{Binding MinWindowCommand}"
                Style="{StaticResource MaterialDesignFlatButton}"
                ToolTip="最小化">
                <Canvas>
                    <Path
                        Canvas.Left="-12"
                        Canvas.Top="-1"
                        Style="{StaticResource ResourceKey=PathStyleForMinWindow}" />
                </Canvas>
            </Button>
            <Button
                Width="20"
                Height="20"
                Margin="0,0,5,0"
                Command="{Binding MaximizeOrRestoreCommand}"
                Style="{StaticResource MaterialDesignFlatButton}"
                ToolTip="{Binding RespectToWindow.TheWindowState}">
                <Canvas>
                    <Path
                        Canvas.Left="-12"
                        Canvas.Top="-5"
                        Style="{StaticResource ResourceKey=PathOfMaxWindow}" />
                </Canvas>
            </Button>
            <Button
                Width="20"
                Height="20"
                Margin="0,0,15,0"
                Command="{Binding CloseCommand}"
                Style="{StaticResource MaterialDesignFlatButton}"
                ToolTip="关闭">
                <Canvas>
                    <Path
                        Canvas.Left="-12"
                        Canvas.Top="-5"
                        Style="{StaticResource ResourceKey=PathClose}" />
                </Canvas>
            </Button>
        </StackPanel>
        <Canvas
            Grid.Row="1"
            Grid.Column="1"
            Width="110"
            VerticalAlignment="Center">
            <Path Style="{StaticResource EllipseForFirstPointBeforeLabel}" />
            <Path Style="{StaticResource EllipseForSecondPointBeforeLabel}" />
            <Path Style="{StaticResource EllipseForThirdPointBeforeLabel}" />
            <StackPanel
                x:Name="TrianglePanel"
                Canvas.Left="2"
                Canvas.Top="-178">
                <DockPanel HorizontalAlignment="Center">
                    <Path DockPanel.Dock="Left" Style="{StaticResource PathOfTriangle}" />
                    <Label Content="三角形" Foreground="#FF3448A1" />
                </DockPanel>
                <DockPanel>
                    <TextBox
                        Name="X1"
                        Width="48"
                        materialDesign:HintAssist.Hint="P1"
                        DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="TriangleCoordinate.TriangleFirstPointX"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label />
                    <TextBox
                        Name="Y1"
                        Width="48"
                        materialDesign:HintAssist.Hint=""
                        DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="TriangleCoordinate.TriangleFirstPointY"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
                <DockPanel>
                    <TextBox
                        Name="X2"
                        Width="48"
                        materialDesign:HintAssist.Hint="P2"
                        DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="TriangleCoordinate.TriangleSecondPointX"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label />
                    <TextBox
                        Name="Y2"
                        Width="48"
                        materialDesign:HintAssist.Hint=""
                        DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="TriangleCoordinate.TriangleSecondPointY"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
                <DockPanel>
                    <TextBox
                        Name="X3"
                        Width="48"
                        materialDesign:HintAssist.Hint="P3"
                        DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="TriangleCoordinate.TriangleThirdPointX"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label />
                    <TextBox
                        Name="Ty3"
                        Width="48"
                        materialDesign:HintAssist.Hint=""
                        DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="TriangleCoordinate.TriangleThirdPointY"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
            </StackPanel>
            <Path Style="{StaticResource EllipseForStartPointBeforeLabel}" />
            <Path Style="{StaticResource EllipseForEndPointBeforeLabel}" />
            <StackPanel
                x:Name="LinePanel"
                Canvas.Left="2"
                Canvas.Top="14">
                <DockPanel HorizontalAlignment="Center">
                    <Path Style="{StaticResource PathOfLine}" />
                    <Label Content="直线" Foreground="#FF3448A1" />
                </DockPanel>
                <DockPanel>
                    <TextBox
                        Name="Lx1"
                        Width="48"
                        materialDesign:HintAssist.Hint="P1"
                        DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="LineCoordinate.LineStartPointX"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label />
                    <TextBox
                        Name="Ly1"
                        Width="48"
                        materialDesign:HintAssist.Hint=""
                        DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="LineCoordinate.LineStartPointY"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
                <DockPanel>
                    <TextBox
                        Name="Lx2"
                        Width="48"
                        materialDesign:HintAssist.Hint="P2"
                        DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="LineCoordinate.LineEndPointX"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label />
                    <TextBox
                        Name="Ly2"
                        Width="48"
                        materialDesign:HintAssist.Hint=""
                        DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="LineCoordinate.LineEndPointY"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewModels:InputRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
            </StackPanel>
        </Canvas>
        <Canvas
            x:Name="DrawCanvas"
            Grid.Row="1"
            Grid.Column="0"
            Style="{StaticResource CanvasStyle}">
            <Grid
                Canvas.Left="0"
                Canvas.Top="5"
                Width="{Binding ElementName=DrawCanvas, Path=ActualWidth}"
                Style="{StaticResource GridOfHorizontal}">
                <ListView
                    Name="RulerListView"
                    ItemContainerStyle="{StaticResource HorizontalListViewItem}"
                    Style="{StaticResource HorizontalListView}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <mvvm:EventToCommand Command="{Binding GetHorizontalRulerListCommand}" CommandParameter="{Binding ElementName=RulerListView, Path=ActualWidth}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SizeChanged">
                            <mvvm:EventToCommand Command="{Binding GetHorizontalRulerListCommand}" CommandParameter="{Binding ElementName=RulerListView, Path=ActualWidth}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Grid>
            <Grid
                Canvas.Left="5"
                Canvas.Top="0"
                Height="{Binding ElementName=DrawCanvas, Path=ActualHeight}"
                Style="{StaticResource GridOfVertical}">
                <ListView
                    Name="RulerListViewHeight"
                    ItemContainerStyle="{StaticResource VerticalListViewItem}"
                    Style="{StaticResource VerticalListView}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <mvvm:EventToCommand Command="{Binding GetVerticalRulerListCommand}" CommandParameter="{Binding ElementName=RulerListViewHeight, Path=ActualHeight}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SizeChanged">
                            <mvvm:EventToCommand Command="{Binding GetVerticalRulerListCommand}" CommandParameter="{Binding ElementName=RulerListViewHeight, Path=ActualHeight}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Grid>
            <Path Style="{StaticResource EllipseForFirstPoint}" />
            <Path Style="{StaticResource EllipseForSecondPoint}" />
            <Path Style="{StaticResource EllipseForThirdPoint}" />
            <Polygon
                Name="Triangle"
                Points="{Binding TriangleCoordinate.PointsOfTriangle, Mode=OneWay}"
                Style="{StaticResource Triangle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <mvvm:EventToCommand Command="{Binding MouseLeftButtonDownCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <mvvm:EventToCommand Command="{Binding MouseLeftButtonUpCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <mvvm:EventToCommand Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Polygon>
            <Path Style="{StaticResource EllipseForStartPoint}" />
            <Path Style="{StaticResource EllipseForEndPoint}" />
            <Polyline
                Name="Line"
                Points="{Binding LineCoordinate.PointsOfLine, Mode=OneWay}"
                Style="{StaticResource Line}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <mvvm:EventToCommand Command="{Binding MouseLeftButtonDownCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <mvvm:EventToCommand Command="{Binding MouseLeftButtonUpCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <mvvm:EventToCommand Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Polyline>
        </Canvas>
    </Grid>
</Window>
